####################
##Problème 1
####################
print (sum_arr 
    (filter (rangex 999) i 
        (or (divisible  (read_var i) 3) (divisible  (read_var i) 5))
        )
    )
####################
##Problème 2
####################
allocate_var tab (arr 0)
allocate_var a 0
allocate_var b 1
while (inf (read_var b) 4000000) (do
    (allocate_var tab (append (read_var tab) (read_var b)))
    (swap_var a b)
    (allocate_var b (sum (read_var a) (read_var b)))
    )
allocate_var tab (filter (read_var tab) i (even (read_var i)))
print (sum_arr (read_var tab))
####################
##Problème 3
####################
allocate_var isPrime (proc_w
	(allocate_var prime1 2)
	(while (and (not (divisible (read_var prime2) (read_var prime1))) (inf (pow (read_var prime1) 2) (read_var prime2)))
		(allocate_var prime1 (incr (read_var prime1)))
		)
	(allocate_var prime3 (or (not (divisible (read_var prime2) (read_var prime1))) (equal (read_var prime2) (read_var prime1))))
	)
allocate_var problem 600851475143
allocate_var prime2 (read_var problem)
proc_r (read_var isPrime)
while (not (read_var prime3)) (do
	(allocate_var problem (div (read_var problem) (read_var prime1)))
	(allocate_var prime2 (read_var problem))
	(proc_r (read_var isPrime))
	)
print (read_var problem)
####################
##Problème 4
####################
allocate_var probleme6 (allocate_var probleme7 90)
allocate_var probleme8 (arr)
while (inf (read_var probleme6) 100) (do
	(while (inf (read_var probleme7) 100) (do
		(allocate_var probleme8 (append (read_var probleme8) (arr (read_var probleme6) (read_var probleme7))))
		(allocate_var probleme7 (incr (read_var probleme7)))
		))
	(allocate_var probleme6 (allocate_var probleme7 (incr (read_var probleme6))))
	)
allocate_var prodArr (proc_w
	(allocate_var prod2 (at_arr (read_var prod1) 0))
	(allocate_var prod3 (at_arr (read_var prod1) 1))
	(allocate_var prod4 (prod (read_var prod2) (read_var prod3)))
	)
allocate_var probleme8 (map (read_var probleme8) prod1 (proc_r (read_var prodArr)))
allocate_var probleme8 (filter (read_var probleme8) i (equal (read_var i) (reverse (read_var i))))
print (at_arr (sort (read_var probleme8)) -1)
####################
##Problème 5
####################
print |||
allocate_var nombres (rangex 3 20)
allocate_var nombresbis (rangex 1 3)
while (different (read_var nombres) (arr)) (do
	(allocate_var nombreSeul (head (read_var nombres)))
	(allocate_var nombres (tail (read_var nombres)))
	(allocate_var bool (true))
	(each (read_var nombres) i (if (divisible (read_var i) (read_var nombreSeul)) (allocate_var bool (false)) (rien)))
	(if (read_var bool) (allocate_var nombresbis (append (read_var nombresbis) (read_var nombreSeul))) (rien))
	)
print (prod_arr  (read_var nombresbis))
print ||||
####################
##Problème 6
####################
allocate_var probleme2 (sum_arr (map (rangex 100) i  (pow (read_var i) 2)))
allocate_var probleme3 (pow (sum_arr (rangex 100)) 2)
print (dif (read_var probleme3) (read_var probleme2))
####################
##Problème 7
####################
allocate_var probleme4 (arr)
allocate_var probleme5 0
allocate_var prime2 2
while (inf (read_var probleme5) 10) (do
	(proc_r (read_var isPrime))
	(if (read_var prime3) 
		(do 
			(allocate_var probleme4 (read_var prime2))
			(allocate_var probleme5 (incr (read_var probleme5)))
			)
		(rien)
		)
	(if (divisible (read_var probleme5) 100) 
		(print (read_var probleme5))
		(rien)
		)
	(allocate_var prime2 (incr (read_var prime2)))
	)
print (read_var probleme4)

