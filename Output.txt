= List  (struct { (= preppend (function value liste {(struct {(= tete value) (= queue liste)})})) (= make  (function size value  { (= aux  (function size acc { (if (== size 0) {acc} {(aux (- size 1) (List.preppend value acc))}) }							 ) ) (aux size unit) } ) ) (= iter  (function list fun  { (= aux  (function list { (if (!= list unit) {(fun list.tete) (aux list.queue)}) }							 ) ) (aux list) } ) ) (= reverse (function list { (= aux  (function list acc { (if (== list unit) {acc} {(aux list.queue (List.preppend list.tete acc))}) }							 ) ) (aux list unit) } ) ) (= range (function min max { (= aux  (function i acc { (if (== i max) {acc} {(aux (+ i 1) (List.preppend i acc))}) }							 ) ) (List.reverse (aux min unit)) } ) ) } )

#debug List
= test (List.range 0 10)
List.iter test (function x {(println x)})
println
List.iter (List.reverse test) (function x {(println x)})